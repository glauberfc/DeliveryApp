type Category @model {
  id: ID!
  name: String!
}

type City @model {
  id: ID!
  name: String!
  uf: String!
}

type Company
  @model
  @key(name: "bySlug", fields: ["slug"], queryField: "companiesBySlug")
  @key(
    name: "byCityByCategory"
    fields: ["cityId", "categoryId"]
    queryField: "companiesByCityByCategory"
  ) {
  id: ID!
  cityId: ID!
  categoryId: ID!
  _cityId: String!
  _categoryId: String!
  slug: String!
  name: String!
  tagline: String!
  logo: String!
  cover: String
  category: Category @connection(fields: ["categoryId"])
  city: City @connection(fields: ["cityId"])
  address: String!
  zipCode: String!
  whatsapp: String!
  # businessHours: BusinessHours
  products: [Product!] @connection(keyName: "companyProducts", fields: ["id"])
  deliveryTax: Float!
  minDeliveryPrice: Float!
}

# type BusinessHours {
#   sunday: {
#     startTime: AWSTime!,
#     endTime: AWSTime!,
#     closed: Boolean!
#     OpenAllDay: Boolean!
#   }
# }

type Product
  @model
  @key(name: "companyProducts", fields: ["companyId"])
  @key(
    name: "byCategory"
    fields: ["companyCategoryId", "promotionalPrice"]
    queryField: "promotionsByCategory"
  ) {
  id: ID!
  companyId: ID!
  companyCategoryId: ID!
  menuSection: String
  company: Company @connection(fields: ["companyId"])
  name: String!
  description: String!
  picture: String!
  price: Float!
  isInPromotion: Boolean!
  promotionalPrice: Float
  promotionDueDate: AWSDateTime
}

type Query {
  listOtherCompanyProducts: [Product!]
    @function(name: "listOtherCompanyProducts-${env}")
}
